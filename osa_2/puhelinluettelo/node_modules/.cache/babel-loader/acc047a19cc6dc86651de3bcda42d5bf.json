{"ast":null,"code":"import _slicedToArray from \"/Users/laurikyttala/Desktop/myWorks/ReactMooc-2019/osa_2/puhelinluettelo/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/laurikyttala/Desktop/myWorks/ReactMooc-2019/osa_2/puhelinluettelo/src/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport Persons from './components/Persons';\nimport Filter from './components/Filter';\nimport AddForm from './components/AddForm';\nimport personService from './services/persons';\n\nvar App = function App() {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      persons = _useState2[0],\n      setPersons = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      newName = _useState4[0],\n      setNewName = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      newNumber = _useState6[0],\n      setNewNumber = _useState6[1];\n\n  var _useState7 = useState(\"\"),\n      _useState8 = _slicedToArray(_useState7, 2),\n      newFilter = _useState8[0],\n      setNewFilter = _useState8[1];\n\n  var _useState9 = useState(persons),\n      _useState10 = _slicedToArray(_useState9, 2),\n      filteredList = _useState10[0],\n      setNewFilteredList = _useState10[1];\n\n  useEffect(function () {\n    personService.getAll().then(function (initialPersons) {\n      setPersons(initialPersons);\n      setNewFilteredList(initialPersons);\n    });\n  }, []);\n  useEffect(function () {\n    console.log('', persons);\n  }, [persons]); // input handlers\n\n  var handleNewName = function handleNewName(evt) {\n    return setNewName(evt.target.value);\n  };\n\n  var handleNewNumber = function handleNewNumber(evt) {\n    return setNewNumber(evt.target.value);\n  }; // check if number and or name exists\n\n\n  var ifNameExists = persons.filter(function (a) {\n    return a.name === newName;\n  }).length > 0 ? true : false;\n\n  var handleFilterChange = function handleFilterChange(event) {\n    setNewFilter(event.target.value);\n    setNewFilteredList(persons.filter(function (person) {\n      return person.name.toUpperCase().includes(event.target.value.toUpperCase());\n    }));\n  };\n\n  var addPerson = function addPerson(event) {\n    event.preventDefault();\n    var name = newName;\n    var number = newNumber;\n\n    if (persons.map(function (person) {\n      return person.name;\n    }).includes(name)) {\n      window.alert(\"\".concat(name, \" on jo luettelosssa\"));\n    } else {\n      var personObject = {\n        name: name,\n        number: number\n      };\n      personService.create(personObject).then(function (returnedPerson) {\n        setNewFilteredList(persons.concat(returnedPerson));\n        setNewName('');\n        setNewNumber('');\n      });\n    }\n  }; // Insert a new record into the directory\n\n\n  var insertRecord = function insertRecord(evt) {\n    evt.preventDefault(); // Check if name or number exists and prevent addition\n\n    if (ifNameExists) {\n      // if name exists -> ask for confirmation on number change\n      if (window.confirm(\"Kontakti \".concat(newName, \" on jo luettelossa, haluatko korvata numeron uudella?\"))) {\n        var oldPerson = persons.filter(function (a) {\n          return a.name === newName;\n        })[0];\n        Data.update(oldPerson.id, newObject).then(function (res) {\n          setPersons(persons.map(function (person) {\n            return person.id === oldPerson.id ? res : person;\n          }));\n          setNotification(\"Kontaktin \".concat(newName, \" numero p\\xE4ivitetty.\"));\n          setTimeout(function () {\n            setNotification(null);\n          }, 2500);\n        });\n      }\n    } else {\n      Data.insert(newObject).then(function (response) {\n        setPersons(persons.concat(response));\n        setNotification(\"Uusi kontakti \".concat(newName, \" lis\\xE4tty\"));\n        setTimeout(function () {\n          setNotification(null);\n        }, 2500);\n      });\n    }\n\n    setNewName('');\n    setNewNumber('');\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, \"Puhelinluettelo\"), React.createElement(Filter, {\n    newFilter: newFilter,\n    handleFilterChange: handleFilterChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }), React.createElement(AddForm, {\n    persons: persons,\n    setPersons: setPersons,\n    newName: newName,\n    setNewName: setNewName,\n    newNumber: newNumber,\n    setNewNumber: setNewNumber,\n    handleNewName: handleNewName,\n    handleNewNumber: handleNewNumber,\n    insertRecord: insertRecord,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }), React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, \"Numerot\"), React.createElement(Persons, {\n    persons: filteredList,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/laurikyttala/Desktop/myWorks/ReactMooc-2019/osa_2/puhelinluettelo/src/App.js"],"names":["React","useState","useEffect","Persons","Filter","AddForm","personService","App","persons","setPersons","newName","setNewName","newNumber","setNewNumber","newFilter","setNewFilter","filteredList","setNewFilteredList","getAll","then","initialPersons","console","log","handleNewName","evt","target","value","handleNewNumber","ifNameExists","filter","a","name","length","handleFilterChange","event","person","toUpperCase","includes","addPerson","preventDefault","number","map","window","alert","personObject","create","returnedPerson","concat","insertRecord","confirm","oldPerson","Data","update","id","newObject","res","setNotification","setTimeout","insert","response"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Persons from './components/Persons';\nimport Filter from './components/Filter';\nimport AddForm from './components/AddForm';\nimport personService from './services/persons';\n\nconst App = () => {\n  const [persons, setPersons] = useState([]);\n  const [newName, setNewName] = useState(\"\");\n  const [newNumber, setNewNumber] = useState(\"\");\n  const [newFilter, setNewFilter] = useState(\"\");\n  const [filteredList, setNewFilteredList] = useState(persons);\n\n  useEffect(() => {\n    personService.getAll().then(initialPersons => {\n      setPersons(initialPersons);\n      setNewFilteredList(initialPersons);\n    });\n  }, []);\n\n  useEffect(() => {\n    console.log('', persons);\n  }, [persons])\n\n  // input handlers\n  const handleNewName = (evt) => setNewName(evt.target.value)\n  const handleNewNumber = (evt) => setNewNumber(evt.target.value)\n\n      // check if number and or name exists\n      const ifNameExists = persons.filter(a => a.name === newName).length > 0 ? true : false\n\n  const handleFilterChange = event => {\n    setNewFilter(event.target.value);\n    setNewFilteredList(\n      persons.filter(person =>\n        person.name.toUpperCase().includes(event.target.value.toUpperCase())\n      )\n    );\n  };\n\n  const addPerson = (event) => {\n    event.preventDefault();\n    const name = newName;\n    const number = newNumber;\n\n    if (persons.map(person => person.name).includes(name)) {\n      window.alert(`${name} on jo luettelosssa`)\n    } else {\n      const personObject = { name, number };\n      personService\n        .create(personObject)\n        .then(returnedPerson => {\n          setNewFilteredList(persons.concat(returnedPerson));\n          setNewName('')\n          setNewNumber('')\n        })\n    }\n  };\n\n  // Insert a new record into the directory\n  const insertRecord = (evt) => {\n    evt.preventDefault()\n    // Check if name or number exists and prevent addition\n\n    if (ifNameExists) {\n      // if name exists -> ask for confirmation on number change\n      if (window.confirm(`Kontakti ${newName} on jo luettelossa, haluatko korvata numeron uudella?`)) {\n        let oldPerson = persons.filter(a => a.name === newName)[0];\n        Data\n          .update(oldPerson.id, newObject)\n          .then(res => {\n            setPersons(persons.map(person => (person.id === oldPerson.id) ? res : person))\n            setNotification(`Kontaktin ${newName} numero päivitetty.`)\n            setTimeout(() => { setNotification(null) }, 2500);\n          })\n      }\n    } else {\n      Data.insert(newObject)\n        .then(response => {\n          setPersons(persons.concat(response))\n          setNotification(`Uusi kontakti ${newName} lisätty`)\n          setTimeout(() => { setNotification(null) }, 2500);\n        })\n    }\n    setNewName('')\n    setNewNumber('')\n\n  }\n\n\n  return (\n    <div>\n      <h1>Puhelinluettelo</h1>\n      <Filter newFilter={newFilter} handleFilterChange={handleFilterChange} />\n      <AddForm persons={persons}\n        setPersons={setPersons}\n        newName={newName}\n        setNewName={setNewName}\n        newNumber={newNumber}\n        setNewNumber={setNewNumber}\n        handleNewName={handleNewName}\n        handleNewNumber={handleNewNumber}\n        insertRecord={insertRecord}\n      />\n      <h1>Numerot</h1>\n      <Persons persons={filteredList} />\n    </div>\n  )\n};\n\nexport default App;"]},"metadata":{},"sourceType":"module"}