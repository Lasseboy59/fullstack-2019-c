{"ast":null,"code":"import _slicedToArray from \"/Users/laurikyttala/Desktop/myWorks/ReactMooc-2019/osa_2/puhelinluettelo/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/laurikyttala/Desktop/myWorks/ReactMooc-2019/osa_2/puhelinluettelo/src/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport Persons from './components/Persons';\nimport Filter from './components/Filter';\nimport AddForm from './components/AddForm';\nimport personService from './services/persons';\n\nvar App = function App() {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      persons = _useState2[0],\n      setPersons = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      newName = _useState4[0],\n      setNewName = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      newNumber = _useState6[0],\n      setNewNumber = _useState6[1];\n\n  var _useState7 = useState(\"\"),\n      _useState8 = _slicedToArray(_useState7, 2),\n      newFilter = _useState8[0],\n      setNewFilter = _useState8[1];\n\n  var _useState9 = useState(persons),\n      _useState10 = _slicedToArray(_useState9, 2),\n      filteredList = _useState10[0],\n      setNewFilteredList = _useState10[1];\n\n  useEffect(function () {\n    personService.getAll().then(function (initialPersons) {\n      setPersons(initialPersons);\n      setNewFilteredList(initialPersons);\n    });\n  }, []);\n  useEffect(function () {\n    console.log('', persons);\n  }, [persons]); // input handlers\n\n  var handleNewName = function handleNewName(evt) {\n    return setNewName(evt.target.value);\n  };\n\n  var handleNewNumber = function handleNewNumber(evt) {\n    return setNewNumber(evt.target.value);\n  };\n\n  var handleFilterChange = function handleFilterChange(event) {\n    setNewFilter(event.target.value);\n    setNewFilteredList(persons.filter(function (person) {\n      return person.name.toUpperCase().includes(event.target.value.toUpperCase());\n    }));\n  };\n\n  var addPerson = function addPerson(event) {\n    event.preventDefault();\n    var name = newName;\n    var number = newNumber;\n\n    if (persons.map(function (person) {\n      return person.name;\n    }).includes(name)) {\n      window.alert(\"\".concat(name, \" on jo luettelosssa\"));\n    } else {\n      var personObject = {\n        name: name,\n        number: number\n      };\n      personService.create(personObject).then(function (returnedPerson) {\n        setNewFilteredList(persons.concat(returnedPerson));\n        setNewName('');\n        setNewNumber('');\n      });\n    }\n  }; // Insert a new record into the directory\n\n\n  var insertRecord = function insertRecord(evt) {\n    evt.preventDefault(); // Check if name or number exists and prevent addition\n\n    if (ifNumExists) {\n      var who = persons.filter(function (a) {\n        return a.number === newNumber;\n      })[0];\n      setNotification(\"\".concat(who.number, \" on asetettu jo kontaktille \").concat(who.name));\n      setTimeout(function () {\n        setNotification(null);\n      }, 1500);\n      setNewNumber('');\n    } else {\n      var newObject = {\n        name: newName,\n        number: newNumber\n      };\n\n      if (ifNameExists) {\n        // if name exists -> ask for confirmation on number change\n        if (window.confirm(\"Kontakti \".concat(newName, \" on jo luettelossa, haluatko korvata numeron uudella?\"))) {\n          var oldPerson = persons.filter(function (a) {\n            return a.name === newName;\n          })[0];\n          Data.update(oldPerson.id, newObject).then(function (res) {\n            setPersons(persons.map(function (person) {\n              return person.id === oldPerson.id ? res : person;\n            }));\n            setNotification(\"Kontaktin \".concat(newName, \" numero p\\xE4ivitetty.\"));\n            setTimeout(function () {\n              setNotification(null);\n            }, 2500);\n          });\n        }\n      } else {\n        Data.insert(newObject).then(function (response) {\n          setPersons(persons.concat(response));\n          setNotification(\"Uusi kontakti \".concat(newName, \" lis\\xE4tty\"));\n          setTimeout(function () {\n            setNotification(null);\n          }, 2500);\n        });\n      }\n\n      setNewName('');\n      setNewNumber('');\n    }\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, \"Puhelinluettelo\"), React.createElement(Filter, {\n    newFilter: newFilter,\n    handleFilterChange: handleFilterChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }), React.createElement(AddForm, {\n    persons: persons,\n    setPersons: setPersons,\n    newName: newName,\n    setNewName: setNewName,\n    newNumber: newNumber,\n    setNewNumber: setNewNumber,\n    handleNewName: handleNewName,\n    handleNewNumber: handleNewNumber,\n    insertRecord: insertRecord,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }), React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, \"Numerot\"), React.createElement(Persons, {\n    persons: filteredList,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/laurikyttala/Desktop/myWorks/ReactMooc-2019/osa_2/puhelinluettelo/src/App.js"],"names":["React","useState","useEffect","Persons","Filter","AddForm","personService","App","persons","setPersons","newName","setNewName","newNumber","setNewNumber","newFilter","setNewFilter","filteredList","setNewFilteredList","getAll","then","initialPersons","console","log","handleNewName","evt","target","value","handleNewNumber","handleFilterChange","event","filter","person","name","toUpperCase","includes","addPerson","preventDefault","number","map","window","alert","personObject","create","returnedPerson","concat","insertRecord","ifNumExists","who","a","setNotification","setTimeout","newObject","ifNameExists","confirm","oldPerson","Data","update","id","res","insert","response"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Persons from './components/Persons';\nimport Filter from './components/Filter';\nimport AddForm from './components/AddForm';\nimport personService from './services/persons';\n\nconst App = () => {\n  const [persons, setPersons] = useState([]);\n  const [newName, setNewName] = useState(\"\");\n  const [newNumber, setNewNumber] = useState(\"\");\n  const [newFilter, setNewFilter] = useState(\"\");\n  const [filteredList, setNewFilteredList] = useState(persons);\n\n  useEffect(() => {\n    personService.getAll().then(initialPersons => {\n      setPersons(initialPersons);\n      setNewFilteredList(initialPersons);\n    });\n  }, []);\n\n  useEffect(() => {\n    console.log('', persons);\n  }, [persons])\n\n  // input handlers\n  const handleNewName = (evt) => setNewName(evt.target.value)\n  const handleNewNumber = (evt) => setNewNumber(evt.target.value)\n\n  const handleFilterChange = event => {\n    setNewFilter(event.target.value);\n    setNewFilteredList(\n      persons.filter(person =>\n        person.name.toUpperCase().includes(event.target.value.toUpperCase())\n      )\n    );\n  };\n\n  const addPerson = (event) => {\n    event.preventDefault();\n    const name = newName;\n    const number = newNumber;\n\n    if (persons.map(person => person.name).includes(name)) {\n      window.alert(`${name} on jo luettelosssa`)\n    } else {\n      const personObject = { name, number };\n      personService\n        .create(personObject)\n        .then(returnedPerson => {\n          setNewFilteredList(persons.concat(returnedPerson));\n          setNewName('')\n          setNewNumber('')\n        })\n    }\n  };\n\n    // Insert a new record into the directory\n    const insertRecord = (evt) => {\n      evt.preventDefault()\n      // Check if name or number exists and prevent addition\n      if (ifNumExists) {\n          let who = persons.filter(a => a.number === newNumber)[0]\n          setNotification(`${who.number} on asetettu jo kontaktille ${who.name}`)\n          setTimeout(() => { setNotification(null) }, 1500)\n          setNewNumber('')\n      } else {\n          const newObject = {\n              name: newName,\n              number: newNumber\n          }\n          if (ifNameExists) {\n              // if name exists -> ask for confirmation on number change\n              if (window.confirm(`Kontakti ${ newName } on jo luettelossa, haluatko korvata numeron uudella?`)) {\n                  let oldPerson = persons.filter(a => a.name === newName)[0];\n                  Data\n                  .update(oldPerson.id, newObject)\n                  .then(res => {\n                      setPersons(persons.map(person => (person.id === oldPerson.id) ? res : person))\n                      setNotification(`Kontaktin ${newName} numero päivitetty.`)\n                      setTimeout(() => { setNotification(null) }, 2500);\n                  })\n              }\n          } else {\n              Data.insert(newObject)\n              .then(response => {\n                  setPersons(persons.concat(response))\n                  setNotification(`Uusi kontakti ${newName} lisätty`)\n                  setTimeout(() => { setNotification(null) }, 2500);\n              })\n          }\n          setNewName('')\n          setNewNumber('')\n      }\n  }\n\n\n  return (\n    <div>\n      <h1>Puhelinluettelo</h1>\n      <Filter newFilter={newFilter} handleFilterChange={handleFilterChange} />\n      <AddForm persons={persons}\n        setPersons={setPersons}\n        newName={newName}\n        setNewName={setNewName}\n        newNumber={newNumber}\n        setNewNumber={setNewNumber}\n        handleNewName={handleNewName}\n        handleNewNumber={handleNewNumber}\n        insertRecord={insertRecord}\n      />\n      <h1>Numerot</h1>\n      <Persons persons={filteredList} />\n    </div>\n  )\n};\n\nexport default App;"]},"metadata":{},"sourceType":"module"}